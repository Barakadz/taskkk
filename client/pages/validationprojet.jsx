import Head from "next/head";
import { Inter } from "next/font/google";
import SideBarDashboard from "@/component/sidebar/sidebar";
import AdminProjet from "@/component/projet/adminprojet";
import Tour from "@/component/tour";
import AdminProjetVal from "@/component/validationprojet/adminprojet";
import { useSelector, useDispatch } from 'react-redux';
import { useRouter } from 'next/router';
import { setUser } from "@/component/redux/userSlice";
import { useEffect, useState } from "react";
import axios from 'axios';

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const router = useRouter();
  const dispatch = useDispatch();
  const user = useSelector((state) => state.user);
  const [directorsEmails, setDirectorsEmails] = useState([]);
  const [userEmailExists, setUserEmailExists] = useState(false);

  useEffect(() => {
    const userEmail = localStorage.getItem('mailtask');
    if (directorsEmails.length > 0) {
      const exists = directorsEmails.some(email => email === userEmail);
      setUserEmailExists(exists);
      if (!exists) {
        router.push('/login');  // Redirection vers une page d'accès non autorisé
      }
     }
  }, [directorsEmails]);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const directeurResponse = await axios.get('https://task.groupe-hasnaoui.com/api/directeur/');
        setDirectorsEmails(directeurResponse.data.map(directeur => directeur.mail));
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    fetchData();

    const mail = localStorage.getItem('mailtask');
    const password = localStorage.getItem('passwordtask');

    if (mail && password) {
      const authHeader = 'Basic ' + btoa(`${mail}:${password}`);
      const url = 'https://api.ldap.groupe-hasnaoui.com/newtask/auth';

      const authenticate = async () => {
        try {
          const response = await axios.post(url, {}, {
            headers: {
              'Authorization': authHeader
            }
          });
          const isAuthenticated = response.data.authenticated;

          if (!isAuthenticated) {
            router.push('/login');
          } else {
            dispatch(setUser({
              firstName: response.data.userinfo.name,
              lastName: response.data.userinfo.fname,
              phoneNumber: response.data.userinfo.phonenumber,
              mail: response.data.userinfo.mail,
              department: response.data.userinfo.department,
              job: response.data.userinfo.title,
             }));
          }
        } catch (error) {
          console.error('Authentication error:', error);
         }
      };

      authenticate();
    } else {
      router.push('/login');
    }
  }, [dispatch, router]);

   
  return (
    <>
      <Head>
        <title>Projet</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/icon?family=Material+Icons"
        />
      </Head>
      <main style={{ padding: '0', background: "#f5f5f5" }}>
        <div id="viewport">
          
            <>
              <SideBarDashboard />
              <Tour />
              <AdminProjetVal />
            </>
           
        </div>
      </main>
    </>
  );
}
